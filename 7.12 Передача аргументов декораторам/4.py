"""
Объявите функцию с именем get_list, одним параметром и следующим описанием
в теле функции:

'''Функция для формирования списка целых значений'''

Сама функция должна формировать и возвращать список целых чисел, который
передается ей на вход в виде строки из целых чисел, записанных через пробел.

Определите декоратор, который выполняет суммирование значений списка,
возвращаемого декорируемой функцией и возвращает результат. Внутри декоратора
декорируйте переданную функцию с помощью команды @wraps (не забудьте сделать
импорт: from functools import wraps).

Такое декорирование необходимо, чтобы исходная функция get_list сохраняла свои
локальные свойства: __name__ и __doc__.

Примените декоратор к функции get_list, но не вызывайте ее.
"""
from functools import wraps


def decor_sum(func):
    @wraps(func)
    def sum_list(*args, **kwargs):
        return sum(func(*args, **kwargs))

    return sum_list


@decor_sum
def get_list(string):
    """Функция для формирования списка целых значений"""
    return list(map(int, string.split()))
